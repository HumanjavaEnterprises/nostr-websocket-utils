{"version":3,"file":"nostr-websocket-utils.min.js","mappings":"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","sources":["webpack://NostrWebSocketUtils/webpack/universalModuleDefinition","webpack://NostrWebSocketUtils/./node_modules/quick-format-unescaped/index.js","webpack://NostrWebSocketUtils/./node_modules/ws/browser.js","webpack://NostrWebSocketUtils/./node_modules/pino/browser.js","webpack://NostrWebSocketUtils/webpack/bootstrap","webpack://NostrWebSocketUtils/webpack/runtime/compat get default export","webpack://NostrWebSocketUtils/webpack/runtime/define property getters","webpack://NostrWebSocketUtils/webpack/runtime/hasOwnProperty shorthand","webpack://NostrWebSocketUtils/./src/types/priority.ts","webpack://NostrWebSocketUtils/./src/types/index.ts","webpack://NostrWebSocketUtils/./src/utils/logger.ts","webpack://NostrWebSocketUtils/./src/core/queue.ts","webpack://NostrWebSocketUtils/./src/browser.ts","webpack://NostrWebSocketUtils/./src/core/client.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"NostrWebSocketUtils\"] = factory();\n\telse\n\t\troot[\"NostrWebSocketUtils\"] = factory();\n})(this, () => {\nreturn ","'use strict'\nfunction tryStringify (o) {\n  try { return JSON.stringify(o) } catch(e) { return '\"[Circular]\"' }\n}\n\nmodule.exports = format\n\nfunction format(f, args, opts) {\n  var ss = (opts && opts.stringify) || tryStringify\n  var offset = 1\n  if (typeof f === 'object' && f !== null) {\n    var len = args.length + offset\n    if (len === 1) return f\n    var objects = new Array(len)\n    objects[0] = ss(f)\n    for (var index = 1; index < len; index++) {\n      objects[index] = ss(args[index])\n    }\n    return objects.join(' ')\n  }\n  if (typeof f !== 'string') {\n    return f\n  }\n  var argLen = args.length\n  if (argLen === 0) return f\n  var str = ''\n  var a = 1 - offset\n  var lastPos = -1\n  var flen = (f && f.length) || 0\n  for (var i = 0; i < flen;) {\n    if (f.charCodeAt(i) === 37 && i + 1 < flen) {\n      lastPos = lastPos > -1 ? lastPos : 0\n      switch (f.charCodeAt(i + 1)) {\n        case 100: // 'd'\n        case 102: // 'f'\n          if (a >= argLen)\n            break\n          if (args[a] == null)  break\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          str += Number(args[a])\n          lastPos = i + 2\n          i++\n          break\n        case 105: // 'i'\n          if (a >= argLen)\n            break\n          if (args[a] == null)  break\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          str += Math.floor(Number(args[a]))\n          lastPos = i + 2\n          i++\n          break\n        case 79: // 'O'\n        case 111: // 'o'\n        case 106: // 'j'\n          if (a >= argLen)\n            break\n          if (args[a] === undefined) break\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          var type = typeof args[a]\n          if (type === 'string') {\n            str += '\\'' + args[a] + '\\''\n            lastPos = i + 2\n            i++\n            break\n          }\n          if (type === 'function') {\n            str += args[a].name || '<anonymous>'\n            lastPos = i + 2\n            i++\n            break\n          }\n          str += ss(args[a])\n          lastPos = i + 2\n          i++\n          break\n        case 115: // 's'\n          if (a >= argLen)\n            break\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          str += String(args[a])\n          lastPos = i + 2\n          i++\n          break\n        case 37: // '%'\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          str += '%'\n          lastPos = i + 2\n          i++\n          a--\n          break\n      }\n      ++a\n    }\n    ++i\n  }\n  if (lastPos === -1)\n    return f\n  else if (lastPos < flen) {\n    str += f.slice(lastPos)\n  }\n\n  return str\n}\n","'use strict';\n\nmodule.exports = function () {\n  throw new Error(\n    'ws does not work in the browser. Browser clients must use the native ' +\n      'WebSocket object'\n  );\n};\n","'use strict'\n\nconst format = require('quick-format-unescaped')\n\nmodule.exports = pino\n\nconst _console = pfGlobalThisOrFallback().console || {}\nconst stdSerializers = {\n  mapHttpRequest: mock,\n  mapHttpResponse: mock,\n  wrapRequestSerializer: passthrough,\n  wrapResponseSerializer: passthrough,\n  wrapErrorSerializer: passthrough,\n  req: mock,\n  res: mock,\n  err: asErrValue,\n  errWithCause: asErrValue\n}\nfunction levelToValue (level, logger) {\n  return level === 'silent'\n    ? Infinity\n    : logger.levels.values[level]\n}\nconst baseLogFunctionSymbol = Symbol('pino.logFuncs')\nconst hierarchySymbol = Symbol('pino.hierarchy')\n\nconst logFallbackMap = {\n  error: 'log',\n  fatal: 'error',\n  warn: 'error',\n  info: 'log',\n  debug: 'log',\n  trace: 'log'\n}\n\nfunction appendChildLogger (parentLogger, childLogger) {\n  const newEntry = {\n    logger: childLogger,\n    parent: parentLogger[hierarchySymbol]\n  }\n  childLogger[hierarchySymbol] = newEntry\n}\n\nfunction setupBaseLogFunctions (logger, levels, proto) {\n  const logFunctions = {}\n  levels.forEach(level => {\n    logFunctions[level] = proto[level] ? proto[level] : (_console[level] || _console[logFallbackMap[level] || 'log'] || noop)\n  })\n  logger[baseLogFunctionSymbol] = logFunctions\n}\n\nfunction shouldSerialize (serialize, serializers) {\n  if (Array.isArray(serialize)) {\n    const hasToFilter = serialize.filter(function (k) {\n      return k !== '!stdSerializers.err'\n    })\n    return hasToFilter\n  } else if (serialize === true) {\n    return Object.keys(serializers)\n  }\n\n  return false\n}\n\nfunction pino (opts) {\n  opts = opts || {}\n  opts.browser = opts.browser || {}\n\n  const transmit = opts.browser.transmit\n  if (transmit && typeof transmit.send !== 'function') { throw Error('pino: transmit option must have a send function') }\n\n  const proto = opts.browser.write || _console\n  if (opts.browser.write) opts.browser.asObject = true\n  const serializers = opts.serializers || {}\n  const serialize = shouldSerialize(opts.browser.serialize, serializers)\n  let stdErrSerialize = opts.browser.serialize\n\n  if (\n    Array.isArray(opts.browser.serialize) &&\n    opts.browser.serialize.indexOf('!stdSerializers.err') > -1\n  ) stdErrSerialize = false\n\n  const customLevels = Object.keys(opts.customLevels || {})\n  const levels = ['error', 'fatal', 'warn', 'info', 'debug', 'trace'].concat(customLevels)\n\n  if (typeof proto === 'function') {\n    levels.forEach(function (level) {\n      proto[level] = proto\n    })\n  }\n  if (opts.enabled === false || opts.browser.disabled) opts.level = 'silent'\n  const level = opts.level || 'info'\n  const logger = Object.create(proto)\n  if (!logger.log) logger.log = noop\n\n  setupBaseLogFunctions(logger, levels, proto)\n  // setup root hierarchy entry\n  appendChildLogger({}, logger)\n\n  Object.defineProperty(logger, 'levelVal', {\n    get: getLevelVal\n  })\n  Object.defineProperty(logger, 'level', {\n    get: getLevel,\n    set: setLevel\n  })\n\n  const setOpts = {\n    transmit,\n    serialize,\n    asObject: opts.browser.asObject,\n    formatters: opts.browser.formatters,\n    levels,\n    timestamp: getTimeFunction(opts)\n  }\n  logger.levels = getLevels(opts)\n  logger.level = level\n\n  logger.setMaxListeners = logger.getMaxListeners =\n  logger.emit = logger.addListener = logger.on =\n  logger.prependListener = logger.once =\n  logger.prependOnceListener = logger.removeListener =\n  logger.removeAllListeners = logger.listeners =\n  logger.listenerCount = logger.eventNames =\n  logger.write = logger.flush = noop\n  logger.serializers = serializers\n  logger._serialize = serialize\n  logger._stdErrSerialize = stdErrSerialize\n  logger.child = child\n\n  if (transmit) logger._logEvent = createLogEventShape()\n\n  function getLevelVal () {\n    return levelToValue(this.level, this)\n  }\n\n  function getLevel () {\n    return this._level\n  }\n  function setLevel (level) {\n    if (level !== 'silent' && !this.levels.values[level]) {\n      throw Error('unknown level ' + level)\n    }\n    this._level = level\n\n    set(this, setOpts, logger, 'error') // <-- must stay first\n    set(this, setOpts, logger, 'fatal')\n    set(this, setOpts, logger, 'warn')\n    set(this, setOpts, logger, 'info')\n    set(this, setOpts, logger, 'debug')\n    set(this, setOpts, logger, 'trace')\n\n    customLevels.forEach((level) => {\n      set(this, setOpts, logger, level)\n    })\n  }\n\n  function child (bindings, childOptions) {\n    if (!bindings) {\n      throw new Error('missing bindings for child Pino')\n    }\n    childOptions = childOptions || {}\n    if (serialize && bindings.serializers) {\n      childOptions.serializers = bindings.serializers\n    }\n    const childOptionsSerializers = childOptions.serializers\n    if (serialize && childOptionsSerializers) {\n      var childSerializers = Object.assign({}, serializers, childOptionsSerializers)\n      var childSerialize = opts.browser.serialize === true\n        ? Object.keys(childSerializers)\n        : serialize\n      delete bindings.serializers\n      applySerializers([bindings], childSerialize, childSerializers, this._stdErrSerialize)\n    }\n    function Child (parent) {\n      this._childLevel = (parent._childLevel | 0) + 1\n\n      // make sure bindings are available in the `set` function\n      this.bindings = bindings\n\n      if (childSerializers) {\n        this.serializers = childSerializers\n        this._serialize = childSerialize\n      }\n      if (transmit) {\n        this._logEvent = createLogEventShape(\n          [].concat(parent._logEvent.bindings, bindings)\n        )\n      }\n    }\n    Child.prototype = this\n    const newLogger = new Child(this)\n\n    // must happen before the level is assigned\n    appendChildLogger(this, newLogger)\n    // required to actually initialize the logger functions for any given child\n    newLogger.level = this.level\n\n    return newLogger\n  }\n  return logger\n}\n\nfunction getLevels (opts) {\n  const customLevels = opts.customLevels || {}\n\n  const values = Object.assign({}, pino.levels.values, customLevels)\n  const labels = Object.assign({}, pino.levels.labels, invertObject(customLevels))\n\n  return {\n    values,\n    labels\n  }\n}\n\nfunction invertObject (obj) {\n  const inverted = {}\n  Object.keys(obj).forEach(function (key) {\n    inverted[obj[key]] = key\n  })\n  return inverted\n}\n\npino.levels = {\n  values: {\n    fatal: 60,\n    error: 50,\n    warn: 40,\n    info: 30,\n    debug: 20,\n    trace: 10\n  },\n  labels: {\n    10: 'trace',\n    20: 'debug',\n    30: 'info',\n    40: 'warn',\n    50: 'error',\n    60: 'fatal'\n  }\n}\n\npino.stdSerializers = stdSerializers\npino.stdTimeFunctions = Object.assign({}, { nullTime, epochTime, unixTime, isoTime })\n\nfunction getBindingChain (logger) {\n  const bindings = []\n  if (logger.bindings) {\n    bindings.push(logger.bindings)\n  }\n\n  // traverse up the tree to get all bindings\n  let hierarchy = logger[hierarchySymbol]\n  while (hierarchy.parent) {\n    hierarchy = hierarchy.parent\n    if (hierarchy.logger.bindings) {\n      bindings.push(hierarchy.logger.bindings)\n    }\n  }\n\n  return bindings.reverse()\n}\n\nfunction set (self, opts, rootLogger, level) {\n  // override the current log functions with either `noop` or the base log function\n  Object.defineProperty(self, level, {\n    value: (levelToValue(self.level, rootLogger) > levelToValue(level, rootLogger)\n      ? noop\n      : rootLogger[baseLogFunctionSymbol][level]),\n    writable: true,\n    enumerable: true,\n    configurable: true\n  })\n\n  if (!opts.transmit && self[level] === noop) {\n    return\n  }\n\n  // make sure the log format is correct\n  self[level] = createWrap(self, opts, rootLogger, level)\n\n  // prepend bindings if it is not the root logger\n  const bindings = getBindingChain(self)\n  if (bindings.length === 0) {\n    // early exit in case for rootLogger\n    return\n  }\n  self[level] = prependBindingsInArguments(bindings, self[level])\n}\n\nfunction prependBindingsInArguments (bindings, logFunc) {\n  return function () {\n    return logFunc.apply(this, [...bindings, ...arguments])\n  }\n}\n\nfunction createWrap (self, opts, rootLogger, level) {\n  return (function (write) {\n    return function LOG () {\n      const ts = opts.timestamp()\n      const args = new Array(arguments.length)\n      const proto = (Object.getPrototypeOf && Object.getPrototypeOf(this) === _console) ? _console : this\n      for (var i = 0; i < args.length; i++) args[i] = arguments[i]\n\n      if (opts.serialize && !opts.asObject) {\n        applySerializers(args, this._serialize, this.serializers, this._stdErrSerialize)\n      }\n      if (opts.asObject || opts.formatters) {\n        write.call(proto, asObject(this, level, args, ts, opts.formatters))\n      } else write.apply(proto, args)\n\n      if (opts.transmit) {\n        const transmitLevel = opts.transmit.level || self._level\n        const transmitValue = rootLogger.levels.values[transmitLevel]\n        const methodValue = rootLogger.levels.values[level]\n        if (methodValue < transmitValue) return\n        transmit(this, {\n          ts,\n          methodLevel: level,\n          methodValue,\n          transmitLevel,\n          transmitValue: rootLogger.levels.values[opts.transmit.level || self._level],\n          send: opts.transmit.send,\n          val: levelToValue(self._level, rootLogger)\n        }, args)\n      }\n    }\n  })(self[baseLogFunctionSymbol][level])\n}\n\nfunction asObject (logger, level, args, ts, formatters = {}) {\n  const {\n    level: levelFormatter = () => logger.levels.values[level],\n    log: logObjectFormatter = (obj) => obj\n  } = formatters\n  if (logger._serialize) applySerializers(args, logger._serialize, logger.serializers, logger._stdErrSerialize)\n  const argsCloned = args.slice()\n  let msg = argsCloned[0]\n  const logObject = {}\n  if (ts) {\n    logObject.time = ts\n  }\n  logObject.level = levelFormatter(level, logger.levels.values[level])\n\n  let lvl = (logger._childLevel | 0) + 1\n  if (lvl < 1) lvl = 1\n  // deliberate, catching objects, arrays\n  if (msg !== null && typeof msg === 'object') {\n    while (lvl-- && typeof argsCloned[0] === 'object') {\n      Object.assign(logObject, argsCloned.shift())\n    }\n    msg = argsCloned.length ? format(argsCloned.shift(), argsCloned) : undefined\n  } else if (typeof msg === 'string') msg = format(argsCloned.shift(), argsCloned)\n  if (msg !== undefined) logObject.msg = msg\n\n  const formattedLogObject = logObjectFormatter(logObject)\n  return formattedLogObject\n}\n\nfunction applySerializers (args, serialize, serializers, stdErrSerialize) {\n  for (const i in args) {\n    if (stdErrSerialize && args[i] instanceof Error) {\n      args[i] = pino.stdSerializers.err(args[i])\n    } else if (typeof args[i] === 'object' && !Array.isArray(args[i])) {\n      for (const k in args[i]) {\n        if (serialize && serialize.indexOf(k) > -1 && k in serializers) {\n          args[i][k] = serializers[k](args[i][k])\n        }\n      }\n    }\n  }\n}\n\nfunction transmit (logger, opts, args) {\n  const send = opts.send\n  const ts = opts.ts\n  const methodLevel = opts.methodLevel\n  const methodValue = opts.methodValue\n  const val = opts.val\n  const bindings = logger._logEvent.bindings\n\n  applySerializers(\n    args,\n    logger._serialize || Object.keys(logger.serializers),\n    logger.serializers,\n    logger._stdErrSerialize === undefined ? true : logger._stdErrSerialize\n  )\n  logger._logEvent.ts = ts\n  logger._logEvent.messages = args.filter(function (arg) {\n    // bindings can only be objects, so reference equality check via indexOf is fine\n    return bindings.indexOf(arg) === -1\n  })\n\n  logger._logEvent.level.label = methodLevel\n  logger._logEvent.level.value = methodValue\n\n  send(methodLevel, logger._logEvent, val)\n\n  logger._logEvent = createLogEventShape(bindings)\n}\n\nfunction createLogEventShape (bindings) {\n  return {\n    ts: 0,\n    messages: [],\n    bindings: bindings || [],\n    level: { label: '', value: 0 }\n  }\n}\n\nfunction asErrValue (err) {\n  const obj = {\n    type: err.constructor.name,\n    msg: err.message,\n    stack: err.stack\n  }\n  for (const key in err) {\n    if (obj[key] === undefined) {\n      obj[key] = err[key]\n    }\n  }\n  return obj\n}\n\nfunction getTimeFunction (opts) {\n  if (typeof opts.timestamp === 'function') {\n    return opts.timestamp\n  }\n  if (opts.timestamp === false) {\n    return nullTime\n  }\n  return epochTime\n}\n\nfunction mock () { return {} }\nfunction passthrough (a) { return a }\nfunction noop () {}\n\nfunction nullTime () { return false }\nfunction epochTime () { return Date.now() }\nfunction unixTime () { return Math.round(Date.now() / 1000.0) }\nfunction isoTime () { return new Date(Date.now()).toISOString() } // using Date.now() for testability\n\n/* eslint-disable */\n/* istanbul ignore next */\nfunction pfGlobalThisOrFallback () {\n  function defd (o) { return typeof o !== 'undefined' && o }\n  try {\n    if (typeof globalThis !== 'undefined') return globalThis\n    Object.defineProperty(Object.prototype, 'globalThis', {\n      get: function () {\n        delete Object.prototype.globalThis\n        return (this.globalThis = this)\n      },\n      configurable: true\n    })\n    return globalThis\n  } catch (e) {\n    return defd(self) || defd(window) || defd(this) || {}\n  }\n}\n/* eslint-enable */\n\nmodule.exports.default = pino\nmodule.exports.pino = pino\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/**\n * @file Message priority definitions\n * @module types/priority\n */\n\n/**\n * Message priority levels for queue management\n */\nexport enum MessagePriority {\n  HIGH = 'HIGH',\n  NORMAL = 'NORMAL',\n  LOW = 'LOW'\n}\n","/**\n * @file Core type definitions\n * @module types\n */\n\nimport type { WebSocket } from 'ws';\nimport type { Logger } from './logger.js';\nimport type { NostrWSMessage, NostrEvent as MessageNostrEvent } from './messages.js';\n\n// Re-export specific types to avoid ambiguity\nexport type { NostrWSMessage } from './messages.js';\nexport type { QueueItem } from './messages.js';\nexport * from './filters.js';\nexport * from './relays.js';\nexport * from './logger.js';\nexport * from './priority.js';\n\n// Export the NostrEvent from messages.ts as our canonical version\nexport type NostrEvent = MessageNostrEvent;\n\n/**\n * Extended WebSocket interface with client ID\n */\nexport interface ExtendedWebSocket extends WebSocket {\n  clientId?: string;\n  isAlive?: boolean;\n  subscriptions?: Set<string>;\n  lastPing?: number;\n  reconnectAttempts?: number;\n  messageQueue?: NostrWSMessage[];\n}\n\n/**\n * WebSocket connection states\n */\nexport enum ConnectionState {\n  CONNECTING = 'CONNECTING',\n  CONNECTED = 'CONNECTED',\n  DISCONNECTED = 'DISCONNECTED',\n  RECONNECTING = 'RECONNECTING',\n  FAILED = 'FAILED'\n}\n\n/**\n * Retry configuration options\n */\nexport interface RetryConfig {\n  maxAttempts: number;\n  initialDelay: number;\n  maxDelay: number;\n  backoffFactor: number;\n}\n\n/**\n * Queue configuration options\n */\nexport interface QueueConfig {\n  maxSize: number;\n  maxRetries: number;\n  retryDelay: number;\n  staleTimeout: number;\n}\n\n/**\n * Heartbeat configuration options\n */\nexport interface HeartbeatConfig {\n  interval: number;\n  timeout: number;\n  maxMissed: number;\n}\n\n/**\n * WebSocket client options\n */\nexport interface NostrWSOptions {\n  WebSocketImpl?: typeof WebSocket;\n  connectionTimeout?: number;\n  retryAttempts?: number;\n  retryDelay?: number;\n  onMessage?: (message: string) => void;\n  onError?: (error: Error) => void;\n  retry?: Partial<RetryConfig>;\n  queue?: Partial<QueueConfig>;\n  heartbeat?: Partial<HeartbeatConfig>;\n  autoReconnect?: boolean;\n  bufferMessages?: boolean;\n  cleanStaleMessages?: boolean;\n  logger?: Logger;\n}\n\n/**\n * Represents a subscription to a Nostr relay\n */\nexport interface NostrWSSubscription {\n  /**\n   * Channel identifier for the subscription\n   */\n  channel: string;\n  \n  /**\n   * Filter criteria for the subscription\n   */\n  filter?: Record<string, unknown>;\n}\n\n/**\n * Events emitted by the NostrWSClient\n */\nexport interface NostrWSClientEvents {\n  /**\n   * Emitted when the client connects to the relay\n   */\n  connect: () => void;\n  \n  /**\n   * Emitted when the client disconnects from the relay\n   */\n  disconnect: () => void;\n  \n  /**\n   * Emitted when the client reconnects to the relay\n   */\n  reconnect: () => void;\n  \n  /**\n   * Emitted when a message is received from the relay\n   * @param message - The received message\n   */\n  message: (message: NostrWSMessage) => Promise<void>;\n  \n  /**\n   * Emitted when an error occurs\n   * @param error - The error that occurred\n   */\n  error: (error: Error) => void;\n  close: () => void;\n  stateChange?: (state: ConnectionState) => void;\n  heartbeat?: () => void;\n}\n\n/**\n * Events emitted by the NostrWSServer\n */\nexport interface NostrWSServerEvents {\n  /**\n   * Emitted when a client connects\n   * @param client - The connected client\n   */\n  connection: (client: ExtendedWebSocket) => void;\n\n  /**\n   * Emitted when a message is received from a client\n   * @param message - The received message\n   * @param client - The client that sent the message\n   */\n  message: (message: NostrWSMessage, client: ExtendedWebSocket) => void;\n\n  /**\n   * Emitted when an error occurs\n   * @param error - The error that occurred\n   */\n  error: (error: Error) => void;\n}\n","/**\n * @file Logger utility\n * @module utils/logger\n */\n\nimport pino, { Logger } from 'pino';\n\n/**\n * Create a new logger instance\n * @param name Name of the logger\n * @returns Logger instance\n */\nexport function createLogger(name: string): Logger {\n  return pino({\n    name,\n    level: process.env.LOG_LEVEL || 'info',\n    timestamp: pino.stdTimeFunctions.isoTime\n  });\n}\n\n/**\n * Get a logger instance for a specific component\n * @param component Component name for the logger\n * @returns Logger instance\n */\nexport function getLogger(component: string): Logger {\n  return createLogger(component);\n}\n\n/**\n * Get a child logger instance\n * @param parent Parent logger instance\n * @param bindings Additional bindings for the child logger\n * @returns Child logger instance\n */\nexport function getChildLogger(parent: Logger, bindings: object): Logger {\n  return parent.child(bindings);\n}\n\nexport type { Logger };\n","/**\n * @file Message queue implementation\n * @module core/queue\n */\n\nimport { NostrWSMessage, MessagePriority, QueueItem } from '../types/index.js';\nimport { createLogger } from '../utils/logger.js';\nimport { Logger } from 'pino';\n\n/**\n * Message queue implementation for handling WebSocket messages\n */\nexport class MessageQueue {\n  private readonly queue: QueueItem[] = [];\n  private readonly logger: Logger;\n  private processing = false;\n\n  constructor(\n    private readonly sender: (message: NostrWSMessage) => Promise<void>,\n    private readonly options: {\n      maxSize?: number;\n      maxRetries?: number;\n      retryDelay?: number;\n      staleTimeout?: number;\n    } = {}\n  ) {\n    this.logger = createLogger('MessageQueue');\n  }\n\n  /**\n   * Add a message to the queue\n   */\n  async enqueue(message: NostrWSMessage): Promise<void> {\n    if (\n      this.options.maxSize &&\n      this.queue.length >= this.options.maxSize\n    ) {\n      throw new Error('Queue is full');\n    }\n\n    const [type, ...data] = message;\n    const queueItem: QueueItem = {\n      type,\n      data: data.length === 1 ? data[0] : data,\n      priority: MessagePriority.NORMAL,\n      queuedAt: Date.now(),\n      retryCount: 0\n    };\n\n    this.queue.push(queueItem);\n    this.queue.sort((a, b) => \n      (a.priority === b.priority) ? \n        (a.queuedAt - b.queuedAt) : \n        (a.priority === MessagePriority.HIGH ? -1 : 1)\n    );\n\n    if (!this.processing) {\n      this.processQueue().catch(error => {\n        this.logger.error({ error }, 'Error processing queue');\n      });\n    }\n  }\n\n  /**\n   * Process messages in the queue\n   */\n  private async processQueue(): Promise<void> {\n    if (this.processing || this.queue.length === 0) {\n      return;\n    }\n\n    this.processing = true;\n\n    try {\n      while (this.queue.length > 0) {\n        const item = this.queue[0];\n        const message: NostrWSMessage = [item.type, item.data];\n\n        try {\n          await this.sender(message);\n          this.queue.shift();\n        } catch (error) {\n          this.logger.error({ error, message }, 'Failed to send message');\n\n          if (\n            this.options.maxRetries &&\n            item.retryCount >= this.options.maxRetries\n          ) {\n            this.logger.warn(\n              { message },\n              'Max retries reached, removing message from queue'\n            );\n            this.queue.shift();\n            continue;\n          }\n\n          item.retryCount++;\n          await new Promise(resolve =>\n            setTimeout(resolve, this.options.retryDelay || 1000)\n          );\n        }\n      }\n    } finally {\n      this.processing = false;\n    }\n\n    // Clean up stale messages\n    if (this.options.staleTimeout) {\n      const now = Date.now();\n      const staleTimeout = this.options.staleTimeout;\n      this.queue.forEach((message, index) => {\n        if (now - message.queuedAt > staleTimeout) {\n          this.logger.warn(\n            { message },\n            'Message is stale, removing from queue'\n          );\n          this.queue.splice(index, 1);\n        }\n      });\n    }\n  }\n\n  /**\n   * Get the current size of the queue\n   */\n  getSize(): number {\n    return this.queue.length;\n  }\n\n  /**\n   * Clear all messages from the queue\n   */\n  clear(): void {\n    this.queue.length = 0;\n  }\n}\n","import { NostrWSClient } from './core/client';\nimport type { NostrWSMessage, ConnectionState } from './types/index';\nimport type { NostrWSClientOptions } from './types/websocket';\n\n// Re-export the client\nexport { NostrWSClient };\n\n// Re-export types\nexport type {\n  NostrWSMessage,\n  NostrWSClientOptions,\n  ConnectionState\n};\n\n// Export a default object for UMD bundle\nexport default {\n  NostrWSClient\n};\n","import WebSocket from 'ws';\nimport { \n  NostrWSMessage, \n  ConnectionState\n} from '../types/index.js';\nimport { NostrWSClientOptions } from '../types/websocket.js';\nimport { MessageQueue } from './queue.js';\nimport { createLogger } from '../utils/logger.js';\nimport { Logger } from 'pino';\n\n/**\n * NostrWSClient handles WebSocket connections to Nostr relays\n */\nexport class NostrWSClient {\n  private ws: WebSocket | null = null;\n  private readonly queue: MessageQueue;\n  private readonly logger: Logger;\n  private connectionState: ConnectionState = ConnectionState.DISCONNECTED;\n  private reconnectAttempts = 0;\n  private reconnectTimeout: NodeJS.Timeout | null = null;\n\n  constructor(\n    private readonly relayUrls: string[],\n    private readonly options: NostrWSClientOptions = {}\n  ) {\n    this.logger = options.logger || createLogger('NostrWSClient');\n    this.queue = new MessageQueue(\n      async (message: NostrWSMessage) => {\n        if (!this.ws || this.connectionState !== ConnectionState.CONNECTED) {\n          throw new Error('Not connected to relay');\n        }\n        try {\n          this.ws.send(JSON.stringify(message));\n          this.logger.debug({ message }, 'Message sent');\n        } catch (error) {\n          this.logger.error({ error, message }, 'Failed to send message');\n          throw error;\n        }\n      },\n      {\n        maxSize: options.queueSize,\n        maxRetries: options.maxRetries,\n        retryDelay: options.retryDelay\n      }\n    );\n  }\n\n  /**\n   * Connect to the relay\n   */\n  async connect(): Promise<void> {\n    if (this.connectionState === ConnectionState.CONNECTED) {\n      this.logger.debug('Already connected');\n      return;\n    }\n\n    if (this.connectionState === ConnectionState.CONNECTING) {\n      this.logger.debug('Connection already in progress');\n      return;\n    }\n\n    this.connectionState = ConnectionState.CONNECTING;\n\n    try {\n      const url = this.relayUrls[0]; // For now just use first relay\n      this.ws = new WebSocket(url);\n\n      await new Promise<void>((resolve, reject) => {\n        const timeout = setTimeout(() => {\n          reject(new Error('Connection timeout'));\n        }, this.options.connectionTimeout || 5000);\n\n        this.ws!.on('open', () => {\n          clearTimeout(timeout);\n          this.connectionState = ConnectionState.CONNECTED;\n          this.reconnectAttempts = 0;\n          this.logger.info('Connected to relay');\n          resolve();\n        });\n\n        this.ws!.on('error', (error) => {\n          clearTimeout(timeout);\n          this.logger.error({ error }, 'WebSocket error');\n          if (this.options.onError) {\n            this.options.onError(error);\n          }\n          reject(error);\n        });\n\n        this.ws!.on('close', () => {\n          this.handleDisconnect();\n        });\n\n        this.ws!.on('message', (data: WebSocket.Data) => {\n          this.handleMessage(data);\n        });\n      });\n    } catch (error) {\n      this.logger.error({ error }, 'Failed to connect');\n      this.handleDisconnect();\n      throw error;\n    }\n  }\n\n  /**\n   * Disconnect from the relay\n   */\n  async disconnect(): Promise<void> {\n    if (this.connectionState === ConnectionState.DISCONNECTED) {\n      this.logger.debug('Already disconnected');\n      return;\n    }\n\n    this.connectionState = ConnectionState.DISCONNECTED;\n    \n    if (this.reconnectTimeout) {\n      clearTimeout(this.reconnectTimeout);\n      this.reconnectTimeout = null;\n    }\n\n    if (this.ws) {\n      this.ws.close();\n      this.ws = null;\n    }\n\n    this.logger.info('Disconnected from relay');\n  }\n\n  /**\n   * Send a message to the relay\n   */\n  async sendMessage(message: NostrWSMessage): Promise<void> {\n    if (this.connectionState !== ConnectionState.CONNECTED) {\n      throw new Error('Not connected to relay');\n    }\n\n    await this.queue.enqueue(message);\n  }\n\n  private handleMessage(data: WebSocket.Data): void {\n    try {\n      const message = JSON.parse(data.toString()) as NostrWSMessage;\n      this.logger.debug({ message }, 'Received message');\n      \n      if (this.options.onMessage) {\n        this.options.onMessage(data.toString());\n      }\n    } catch (error) {\n      this.logger.error({ error, data }, 'Failed to parse message');\n      if (this.options.onError) {\n        this.options.onError(error as Error);\n      }\n    }\n  }\n\n  private handleDisconnect(): void {\n    this.connectionState = ConnectionState.DISCONNECTED;\n    this.ws = null;\n\n    if (\n      this.options.retryAttempts &&\n      this.reconnectAttempts < this.options.retryAttempts\n    ) {\n      this.connectionState = ConnectionState.RECONNECTING;\n      this.reconnectAttempts++;\n\n      const delay = this.options.retryDelay || 1000;\n      this.logger.info(\n        { attempt: this.reconnectAttempts, maxAttempts: this.options.retryAttempts },\n        `Reconnecting in ${delay}ms`\n      );\n\n      this.reconnectTimeout = setTimeout(() => {\n        this.connect().catch(error => {\n          this.logger.error({ error }, 'Reconnection failed');\n        });\n      }, delay);\n    } else {\n      this.logger.warn('Max reconnection attempts reached');\n      this.connectionState = ConnectionState.FAILED;\n    }\n  }\n\n  /**\n   * Get the current connection state\n   */\n  getConnectionState(): ConnectionState {\n    return this.connectionState;\n  }\n}\n"],"names":["root","factory","exports","module","define","amd","this","tryStringify","o","JSON","stringify","e","f","args","opts","ss","len","length","objects","Array","index","join","argLen","str","a","lastPos","flen","i","charCodeAt","slice","Number","Math","floor","undefined","type","name","String","Error","format","pino","_console","defd","globalThis","Object","defineProperty","prototype","get","configurable","self","window","pfGlobalThisOrFallback","console","stdSerializers","mapHttpRequest","mock","mapHttpResponse","wrapRequestSerializer","passthrough","wrapResponseSerializer","wrapErrorSerializer","req","res","err","asErrValue","errWithCause","levelToValue","level","logger","Infinity","levels","values","baseLogFunctionSymbol","Symbol","hierarchySymbol","logFallbackMap","error","fatal","warn","info","debug","trace","appendChildLogger","parentLogger","childLogger","newEntry","parent","browser","transmit","send","proto","write","asObject","serializers","serialize","isArray","filter","k","keys","shouldSerialize","stdErrSerialize","indexOf","customLevels","concat","forEach","enabled","disabled","create","log","noop","logFunctions","setupBaseLogFunctions","_level","set","setOpts","formatters","timestamp","getTimeFunction","assign","labels","obj","inverted","key","invertObject","getLevels","setMaxListeners","getMaxListeners","emit","addListener","on","prependListener","once","prependOnceListener","removeListener","removeAllListeners","listeners","listenerCount","eventNames","flush","_serialize","_stdErrSerialize","child","bindings","childOptions","childOptionsSerializers","childSerializers","childSerialize","applySerializers","Child","_childLevel","_logEvent","createLogEventShape","newLogger","rootLogger","value","writable","enumerable","ts","arguments","getPrototypeOf","call","levelFormatter","logObjectFormatter","argsCloned","msg","logObject","time","lvl","shift","apply","transmitLevel","transmitValue","methodValue","methodLevel","val","messages","arg","label","createWrap","push","hierarchy","reverse","getBindingChain","logFunc","prependBindingsInArguments","constructor","message","stack","nullTime","epochTime","Date","now","stdTimeFunctions","unixTime","round","isoTime","toISOString","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","definition","prop","hasOwnProperty","MessagePriority","ConnectionState","createLogger","process","env","LOG_LEVEL","MessageQueue","sender","options","queue","processing","enqueue","maxSize","data","queueItem","priority","NORMAL","queuedAt","retryCount","sort","b","HIGH","processQueue","catch","item","maxRetries","Promise","resolve","setTimeout","retryDelay","staleTimeout","splice","getSize","clear","NostrWSClient","relayUrls","ws","connectionState","DISCONNECTED","reconnectAttempts","reconnectTimeout","CONNECTED","queueSize","connect","CONNECTING","url","reject","timeout","connectionTimeout","clearTimeout","onError","handleDisconnect","handleMessage","disconnect","close","sendMessage","parse","toString","onMessage","retryAttempts","RECONNECTING","delay","attempt","maxAttempts","FAILED","getConnectionState"],"sourceRoot":""}